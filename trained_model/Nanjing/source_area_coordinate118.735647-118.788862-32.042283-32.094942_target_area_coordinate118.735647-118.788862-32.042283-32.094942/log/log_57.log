2020-10-29 18:50:44,566 - root - INFO - Namespace(K=10, O1_print_every=1, O2_print_every=1, O3_print_every=1, O4_print_every=1, auto_encoder_dim=9, batch_size=32, city_name='Nanjing', data_dir='datasets/', enterprise=['luckin coffee瑞幸咖啡', 'CoCo都可', '星巴克'], eps=1e-09, evaluate_every=1, gamma=8, grid_size_latitude_degree=0.005, grid_size_longitude_degree=0.005, lambda_1=1, lambda_2=0.5, lambda_3=0.5, lambda_4=0.025, lr=0.001, mess_dropout=0.1, n_epoch=100, print_every=1, save_dir='trained_model/Nanjing/source_area_coordinate118.735647-118.788862-32.042283-32.094942_target_area_coordinate118.735647-118.788862-32.042283-32.094942/', score_norm_max=400, seed=981125, source_area_coordinate=[118.735647, 118.788862, 32.042283, 32.094942], stopping_steps=10, target_area_coordinate=[118.771352, 118.823537, 32.013759, 32.060615], target_enterprise='星巴克')
2020-10-29 18:50:44,567 - root - INFO - --------------parse args and init done.
2020-10-29 18:50:46,417 - root - INFO - [1 /10]       load dianping data done.
2020-10-29 18:50:46,430 - root - INFO - [2 /10]       check enterprise and get small category set.
2020-10-29 18:50:46,430 - root - INFO - n_source_grid: 100, n_target_grid: 90
2020-10-29 18:50:46,430 - root - INFO - [3 /10]       split grid done.
2020-10-29 18:50:46,883 - root - INFO - [4 /10]       distribute data into grids done.
2020-10-29 18:50:46,884 - root - INFO - [5 /10]       generate rating matrix for Transfer Rating Prediction Model done.
2020-10-29 18:50:46,936 - root - INFO - [6 /10]       extract geographic features done.
2020-10-29 18:50:47,006 - root - INFO - [7 /10]       extract commercial features done.
2020-10-29 18:50:47,006 - root - INFO - [8 /10]       combine features done.
2020-10-29 18:50:47,062 - root - INFO - [9 /10]       get PCCS and generate delta set done.
2020-10-29 18:50:47,062 - root - INFO - [10/10]       generate training and testing index done.
2020-10-29 18:50:47,091 - root - INFO - --------------load data done.
2020-10-29 18:50:47,092 - root - INFO - CityTransfer(
  (auto_encoder): ModuleList(
    (0): AutoEncoder(
      (encoder): Sequential(
        (0): Linear(in_features=21, out_features=14, bias=True)
        (1): Tanh()
        (2): Linear(in_features=14, out_features=9, bias=True)
      )
      (decoder): Sequential(
        (0): Linear(in_features=9, out_features=14, bias=True)
        (1): Tanh()
        (2): Linear(in_features=14, out_features=21, bias=True)
      )
    )
    (1): AutoEncoder(
      (encoder): Sequential(
        (0): Linear(in_features=21, out_features=14, bias=True)
        (1): Tanh()
        (2): Linear(in_features=14, out_features=9, bias=True)
      )
      (decoder): Sequential(
        (0): Linear(in_features=9, out_features=14, bias=True)
        (1): Tanh()
        (2): Linear(in_features=14, out_features=21, bias=True)
      )
    )
  )
)
2020-10-29 18:50:47,092 - root - INFO - --------------construct model and optimizer done.
2020-10-29 18:50:47,092 - root - INFO - --------------initialize metrics done.
2020-10-29 18:50:47,093 - root - INFO - [!]-----------start training.
2020-10-29 18:50:47,102 - root - INFO - Training: Epoch 0000 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 2078.0876 | Iter Mean Loss 2078.0876
2020-10-29 18:50:47,108 - root - INFO - Training: Epoch 0000 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 1457.3003 | Iter Mean Loss 1767.6940
2020-10-29 18:50:47,115 - root - INFO - Training: Epoch 0000 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 1070.3811 | Iter Mean Loss 1535.2563
2020-10-29 18:50:47,121 - root - INFO - Training: Epoch 0000 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 785.0388 | Iter Mean Loss 1347.7020
2020-10-29 18:50:47,123 - root - INFO - Evaluate: Epoch 0000 | NDCG 0.0603 | MSE 10.2747
2020-10-29 18:50:47,130 - root - INFO - Training: Epoch 0001 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1897.5382 | Iter Mean Loss 1897.5382
2020-10-29 18:50:47,137 - root - INFO - Training: Epoch 0001 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 1285.9603 | Iter Mean Loss 1591.7493
2020-10-29 18:50:47,143 - root - INFO - Training: Epoch 0001 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 924.2717 | Iter Mean Loss 1369.2568
2020-10-29 18:50:47,148 - root - INFO - Training: Epoch 0001 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 708.9879 | Iter Mean Loss 1204.1895
2020-10-29 18:50:47,150 - root - INFO - Evaluate: Epoch 0001 | NDCG 0.0520 | MSE 10.3064
2020-10-29 18:50:47,156 - root - INFO - Training: Epoch 0002 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1754.2214 | Iter Mean Loss 1754.2214
2020-10-29 18:50:47,162 - root - INFO - Training: Epoch 0002 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 1148.8293 | Iter Mean Loss 1451.5254
2020-10-29 18:50:47,168 - root - INFO - Training: Epoch 0002 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 807.5162 | Iter Mean Loss 1236.8557
2020-10-29 18:50:47,174 - root - INFO - Training: Epoch 0002 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 647.0497 | Iter Mean Loss 1089.4042
2020-10-29 18:50:47,176 - root - INFO - Evaluate: Epoch 0002 | NDCG 0.0520 | MSE 10.3387
2020-10-29 18:50:47,183 - root - INFO - Training: Epoch 0003 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1638.9526 | Iter Mean Loss 1638.9526
2020-10-29 18:50:47,189 - root - INFO - Training: Epoch 0003 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 1038.9635 | Iter Mean Loss 1338.9581
2020-10-29 18:50:47,195 - root - INFO - Training: Epoch 0003 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 714.6698 | Iter Mean Loss 1130.8620
2020-10-29 18:50:47,200 - root - INFO - Training: Epoch 0003 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 597.1431 | Iter Mean Loss 997.4323
2020-10-29 18:50:47,202 - root - INFO - Evaluate: Epoch 0003 | NDCG 0.0467 | MSE 10.3713
2020-10-29 18:50:47,208 - root - INFO - Training: Epoch 0004 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1547.1490 | Iter Mean Loss 1547.1490
2020-10-29 18:50:47,214 - root - INFO - Training: Epoch 0004 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 951.9132 | Iter Mean Loss 1249.5311
2020-10-29 18:50:47,220 - root - INFO - Training: Epoch 0004 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 641.6710 | Iter Mean Loss 1046.9111
2020-10-29 18:50:47,226 - root - INFO - Training: Epoch 0004 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 557.3659 | Iter Mean Loss 924.5248
2020-10-29 18:50:47,227 - root - INFO - Evaluate: Epoch 0004 | NDCG 0.0430 | MSE 10.4037
2020-10-29 18:50:47,233 - root - INFO - Training: Epoch 0005 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1474.8236 | Iter Mean Loss 1474.8236
2020-10-29 18:50:47,240 - root - INFO - Training: Epoch 0005 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 883.7047 | Iter Mean Loss 1179.2642
2020-10-29 18:50:47,245 - root - INFO - Training: Epoch 0005 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 584.9653 | Iter Mean Loss 981.1646
2020-10-29 18:50:47,251 - root - INFO - Training: Epoch 0005 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 525.9285 | Iter Mean Loss 867.3555
2020-10-29 18:50:47,252 - root - INFO - Evaluate: Epoch 0005 | NDCG 0.0402 | MSE 10.4354
2020-10-29 18:50:47,258 - root - INFO - Training: Epoch 0006 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1418.4535 | Iter Mean Loss 1418.4535
2020-10-29 18:50:47,265 - root - INFO - Training: Epoch 0006 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 830.8525 | Iter Mean Loss 1124.6530
2020-10-29 18:50:47,270 - root - INFO - Training: Epoch 0006 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 541.5154 | Iter Mean Loss 930.2738
2020-10-29 18:50:47,276 - root - INFO - Training: Epoch 0006 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 501.2412 | Iter Mean Loss 823.0157
2020-10-29 18:50:47,277 - root - INFO - Evaluate: Epoch 0006 | NDCG 0.0402 | MSE 10.4658
2020-10-29 18:50:47,283 - root - INFO - Training: Epoch 0007 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1374.9633 | Iter Mean Loss 1374.9633
2020-10-29 18:50:47,290 - root - INFO - Training: Epoch 0007 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 790.2744 | Iter Mean Loss 1082.6188
2020-10-29 18:50:47,296 - root - INFO - Training: Epoch 0007 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 508.6347 | Iter Mean Loss 891.2908
2020-10-29 18:50:47,302 - root - INFO - Training: Epoch 0007 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 481.8563 | Iter Mean Loss 788.9322
2020-10-29 18:50:47,304 - root - INFO - Evaluate: Epoch 0007 | NDCG 0.0402 | MSE 10.4942
2020-10-29 18:50:47,311 - root - INFO - Training: Epoch 0008 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1341.5176 | Iter Mean Loss 1341.5176
2020-10-29 18:50:47,317 - root - INFO - Training: Epoch 0008 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 759.0914 | Iter Mean Loss 1050.3045
2020-10-29 18:50:47,324 - root - INFO - Training: Epoch 0008 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 483.7946 | Iter Mean Loss 861.4679
2020-10-29 18:50:47,330 - root - INFO - Training: Epoch 0008 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 466.4183 | Iter Mean Loss 762.7055
2020-10-29 18:50:47,332 - root - INFO - Evaluate: Epoch 0008 | NDCG 0.0402 | MSE 10.5202
2020-10-29 18:50:47,338 - root - INFO - Training: Epoch 0009 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1315.4391 | Iter Mean Loss 1315.4391
2020-10-29 18:50:47,346 - root - INFO - Training: Epoch 0009 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 734.6091 | Iter Mean Loss 1025.0241
2020-10-29 18:50:47,352 - root - INFO - Training: Epoch 0009 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 464.6332 | Iter Mean Loss 838.2272
2020-10-29 18:50:47,358 - root - INFO - Training: Epoch 0009 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 453.7119 | Iter Mean Loss 742.0983
2020-10-29 18:50:47,360 - root - INFO - Evaluate: Epoch 0009 | NDCG 0.0000 | MSE 10.5435
2020-10-29 18:50:47,367 - root - INFO - Training: Epoch 0010 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1294.3445 | Iter Mean Loss 1294.3445
2020-10-29 18:50:47,373 - root - INFO - Training: Epoch 0010 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 714.5009 | Iter Mean Loss 1004.4227
2020-10-29 18:50:47,381 - root - INFO - Training: Epoch 0010 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 449.1339 | Iter Mean Loss 819.3264
2020-10-29 18:50:47,386 - root - INFO - Training: Epoch 0010 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 442.7567 | Iter Mean Loss 725.1840
2020-10-29 18:50:47,388 - root - INFO - Evaluate: Epoch 0010 | NDCG 0.0000 | MSE 10.5639
2020-10-29 18:50:47,394 - root - INFO - Training: Epoch 0011 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1276.3506 | Iter Mean Loss 1276.3506
2020-10-29 18:50:47,401 - root - INFO - Training: Epoch 0011 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 697.0012 | Iter Mean Loss 986.6759
2020-10-29 18:50:47,407 - root - INFO - Training: Epoch 0011 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 435.7905 | Iter Mean Loss 803.0474
2020-10-29 18:50:47,412 - root - INFO - Training: Epoch 0011 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 432.8571 | Iter Mean Loss 710.4999
2020-10-29 18:50:47,413 - root - INFO - Evaluate: Epoch 0011 | NDCG 0.0000 | MSE 10.5814
2020-10-29 18:50:47,420 - root - INFO - Training: Epoch 0012 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1260.1660 | Iter Mean Loss 1260.1660
2020-10-29 18:50:47,426 - root - INFO - Training: Epoch 0012 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 680.9528 | Iter Mean Loss 970.5594
2020-10-29 18:50:47,432 - root - INFO - Training: Epoch 0012 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 423.6318 | Iter Mean Loss 788.2502
2020-10-29 18:50:47,437 - root - INFO - Training: Epoch 0012 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 423.5754 | Iter Mean Loss 697.0815
2020-10-29 18:50:47,439 - root - INFO - Evaluate: Epoch 0012 | NDCG 0.0000 | MSE 10.5962
2020-10-29 18:50:47,445 - root - INFO - Training: Epoch 0013 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1245.0225 | Iter Mean Loss 1245.0225
2020-10-29 18:50:47,451 - root - INFO - Training: Epoch 0013 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 665.7051 | Iter Mean Loss 955.3638
2020-10-29 18:50:47,457 - root - INFO - Training: Epoch 0013 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 412.1246 | Iter Mean Loss 774.2840
2020-10-29 18:50:47,463 - root - INFO - Training: Epoch 0013 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 414.6634 | Iter Mean Loss 684.3789
2020-10-29 18:50:47,464 - root - INFO - Evaluate: Epoch 0013 | NDCG 0.0000 | MSE 10.6084
2020-10-29 18:50:47,470 - root - INFO - Training: Epoch 0014 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1230.5295 | Iter Mean Loss 1230.5295
2020-10-29 18:50:47,476 - root - INFO - Training: Epoch 0014 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 650.9597 | Iter Mean Loss 940.7446
2020-10-29 18:50:47,482 - root - INFO - Training: Epoch 0014 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 401.0382 | Iter Mean Loss 760.8425
2020-10-29 18:50:47,488 - root - INFO - Training: Epoch 0014 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 405.9980 | Iter Mean Loss 672.1314
2020-10-29 18:50:47,489 - root - INFO - Evaluate: Epoch 0014 | NDCG 0.0000 | MSE 10.6184
2020-10-29 18:50:47,495 - root - INFO - Training: Epoch 0015 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1216.5352 | Iter Mean Loss 1216.5352
2020-10-29 18:50:47,502 - root - INFO - Training: Epoch 0015 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 636.6337 | Iter Mean Loss 926.5844
2020-10-29 18:50:47,509 - root - INFO - Training: Epoch 0015 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 390.3271 | Iter Mean Loss 747.8320
2020-10-29 18:50:47,514 - root - INFO - Training: Epoch 0015 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 397.5325 | Iter Mean Loss 660.2571
2020-10-29 18:50:47,516 - root - INFO - Evaluate: Epoch 0015 | NDCG 0.0000 | MSE 10.6267
2020-10-29 18:50:47,522 - root - INFO - Training: Epoch 0016 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1203.0214 | Iter Mean Loss 1203.0214
2020-10-29 18:50:47,529 - root - INFO - Training: Epoch 0016 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 622.7578 | Iter Mean Loss 912.8896
2020-10-29 18:50:47,536 - root - INFO - Training: Epoch 0016 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 380.0404 | Iter Mean Loss 735.2732
2020-10-29 18:50:47,542 - root - INFO - Training: Epoch 0016 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 389.2625 | Iter Mean Loss 648.7705
2020-10-29 18:50:47,544 - root - INFO - Evaluate: Epoch 0016 | NDCG 0.0000 | MSE 10.6337
2020-10-29 18:50:47,551 - root - INFO - Training: Epoch 0017 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1190.0287 | Iter Mean Loss 1190.0287
2020-10-29 18:50:47,557 - root - INFO - Training: Epoch 0017 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 609.4041 | Iter Mean Loss 899.7164
2020-10-29 18:50:47,565 - root - INFO - Training: Epoch 0017 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 370.2562 | Iter Mean Loss 723.2296
2020-10-29 18:50:47,570 - root - INFO - Training: Epoch 0017 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 381.2007 | Iter Mean Loss 637.7224
2020-10-29 18:50:47,572 - root - INFO - Evaluate: Epoch 0017 | NDCG 0.0000 | MSE 10.6395
2020-10-29 18:50:47,579 - root - INFO - Training: Epoch 0018 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1177.6052 | Iter Mean Loss 1177.6052
2020-10-29 18:50:47,586 - root - INFO - Training: Epoch 0018 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 596.6359 | Iter Mean Loss 887.1206
2020-10-29 18:50:47,593 - root - INFO - Training: Epoch 0018 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 361.0359 | Iter Mean Loss 711.7590
2020-10-29 18:50:47,599 - root - INFO - Training: Epoch 0018 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 373.3593 | Iter Mean Loss 627.1591
2020-10-29 18:50:47,601 - root - INFO - Evaluate: Epoch 0018 | NDCG 0.0000 | MSE 10.6445
2020-10-29 18:50:47,607 - root - INFO - Training: Epoch 0019 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1165.7742 | Iter Mean Loss 1165.7742
2020-10-29 18:50:47,613 - root - INFO - Training: Epoch 0019 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 584.4814 | Iter Mean Loss 875.1278
2020-10-29 18:50:47,619 - root - INFO - Training: Epoch 0019 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 352.4053 | Iter Mean Loss 700.8869
2020-10-29 18:50:47,624 - root - INFO - Training: Epoch 0019 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 365.7417 | Iter Mean Loss 617.1006
2020-10-29 18:50:47,626 - root - INFO - Evaluate: Epoch 0019 | NDCG 0.0000 | MSE 10.6485
2020-10-29 18:50:47,632 - root - INFO - Training: Epoch 0020 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1154.5280 | Iter Mean Loss 1154.5280
2020-10-29 18:50:47,639 - root - INFO - Training: Epoch 0020 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 572.9319 | Iter Mean Loss 863.7299
2020-10-29 18:50:47,645 - root - INFO - Training: Epoch 0020 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 344.3544 | Iter Mean Loss 690.6048
2020-10-29 18:50:47,650 - root - INFO - Training: Epoch 0020 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 358.3433 | Iter Mean Loss 607.5394
2020-10-29 18:50:47,651 - root - INFO - Evaluate: Epoch 0020 | NDCG 0.0000 | MSE 10.6516
2020-10-29 18:50:47,658 - root - INFO - Training: Epoch 0021 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1143.8362 | Iter Mean Loss 1143.8362
2020-10-29 18:50:47,664 - root - INFO - Training: Epoch 0021 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 561.9551 | Iter Mean Loss 852.8956
2020-10-29 18:50:47,670 - root - INFO - Training: Epoch 0021 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 336.8520 | Iter Mean Loss 680.8811
2020-10-29 18:50:47,675 - root - INFO - Training: Epoch 0021 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 351.1560 | Iter Mean Loss 598.4498
2020-10-29 18:50:47,677 - root - INFO - Evaluate: Epoch 0021 | NDCG 0.0000 | MSE 10.6536
2020-10-29 18:50:47,683 - root - INFO - Training: Epoch 0022 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1133.6606 | Iter Mean Loss 1133.6606
2020-10-29 18:50:47,689 - root - INFO - Training: Epoch 0022 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 551.5110 | Iter Mean Loss 842.5858
2020-10-29 18:50:47,695 - root - INFO - Training: Epoch 0022 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 329.8595 | Iter Mean Loss 671.6770
2020-10-29 18:50:47,700 - root - INFO - Training: Epoch 0022 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 344.1744 | Iter Mean Loss 589.8014
2020-10-29 18:50:47,702 - root - INFO - Evaluate: Epoch 0022 | NDCG 0.0000 | MSE 10.6544
2020-10-29 18:50:47,709 - root - INFO - Training: Epoch 0023 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1123.9670 | Iter Mean Loss 1123.9670
2020-10-29 18:50:47,716 - root - INFO - Training: Epoch 0023 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 541.5641 | Iter Mean Loss 832.7656
2020-10-29 18:50:47,722 - root - INFO - Training: Epoch 0023 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 323.3416 | Iter Mean Loss 662.9576
2020-10-29 18:50:47,728 - root - INFO - Training: Epoch 0023 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 337.3997 | Iter Mean Loss 581.5681
2020-10-29 18:50:47,729 - root - INFO - Evaluate: Epoch 0023 | NDCG 0.0000 | MSE 10.6540
2020-10-29 18:50:47,737 - root - INFO - Training: Epoch 0024 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1114.7295 | Iter Mean Loss 1114.7295
2020-10-29 18:50:47,744 - root - INFO - Training: Epoch 0024 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 532.0874 | Iter Mean Loss 823.4084
2020-10-29 18:50:47,750 - root - INFO - Training: Epoch 0024 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 317.2677 | Iter Mean Loss 654.6949
2020-10-29 18:50:47,757 - root - INFO - Training: Epoch 0024 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 330.8400 | Iter Mean Loss 573.7311
2020-10-29 18:50:47,758 - root - INFO - Evaluate: Epoch 0024 | NDCG 0.0000 | MSE 10.6523
2020-10-29 18:50:47,765 - root - INFO - Training: Epoch 0025 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1105.9291 | Iter Mean Loss 1105.9291
2020-10-29 18:50:47,772 - root - INFO - Training: Epoch 0025 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 523.0613 | Iter Mean Loss 814.4952
2020-10-29 18:50:47,779 - root - INFO - Training: Epoch 0025 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 311.6119 | Iter Mean Loss 646.8674
2020-10-29 18:50:47,785 - root - INFO - Training: Epoch 0025 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 324.5103 | Iter Mean Loss 566.2782
2020-10-29 18:50:47,787 - root - INFO - Evaluate: Epoch 0025 | NDCG 0.0000 | MSE 10.6491
2020-10-29 18:50:47,794 - root - INFO - Training: Epoch 0026 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1097.5535 | Iter Mean Loss 1097.5535
2020-10-29 18:50:47,800 - root - INFO - Training: Epoch 0026 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 514.4725 | Iter Mean Loss 806.0130
2020-10-29 18:50:47,807 - root - INFO - Training: Epoch 0026 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 306.3513 | Iter Mean Loss 639.4591
2020-10-29 18:50:47,813 - root - INFO - Training: Epoch 0026 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 318.4310 | Iter Mean Loss 559.2021
2020-10-29 18:50:47,814 - root - INFO - Evaluate: Epoch 0026 | NDCG 0.0000 | MSE 10.6443
2020-10-29 18:50:47,821 - root - INFO - Training: Epoch 0027 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1089.5940 | Iter Mean Loss 1089.5940
2020-10-29 18:50:47,827 - root - INFO - Training: Epoch 0027 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 506.3129 | Iter Mean Loss 797.9534
2020-10-29 18:50:47,833 - root - INFO - Training: Epoch 0027 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 301.4671 | Iter Mean Loss 632.4580
2020-10-29 18:50:47,839 - root - INFO - Training: Epoch 0027 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 312.6255 | Iter Mean Loss 552.4999
2020-10-29 18:50:47,841 - root - INFO - Evaluate: Epoch 0027 | NDCG 0.0000 | MSE 10.6379
2020-10-29 18:50:47,848 - root - INFO - Training: Epoch 0028 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1082.0466 | Iter Mean Loss 1082.0466
2020-10-29 18:50:47,854 - root - INFO - Training: Epoch 0028 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 498.5797 | Iter Mean Loss 790.3132
2020-10-29 18:50:47,860 - root - INFO - Training: Epoch 0028 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 296.9441 | Iter Mean Loss 625.8568
2020-10-29 18:50:47,865 - root - INFO - Training: Epoch 0028 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 307.1178 | Iter Mean Loss 546.1721
2020-10-29 18:50:47,867 - root - INFO - Evaluate: Epoch 0028 | NDCG 0.0000 | MSE 10.6297
2020-10-29 18:50:47,873 - root - INFO - Training: Epoch 0029 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1074.9075 | Iter Mean Loss 1074.9075
2020-10-29 18:50:47,879 - root - INFO - Training: Epoch 0029 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 491.2735 | Iter Mean Loss 783.0905
2020-10-29 18:50:47,885 - root - INFO - Training: Epoch 0029 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 292.7710 | Iter Mean Loss 619.6507
2020-10-29 18:50:47,891 - root - INFO - Training: Epoch 0029 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 301.9299 | Iter Mean Loss 540.2205
2020-10-29 18:50:47,892 - root - INFO - Evaluate: Epoch 0029 | NDCG 0.0053 | MSE 10.6197
2020-10-29 18:50:47,898 - root - INFO - Training: Epoch 0030 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1068.1722 | Iter Mean Loss 1068.1722
2020-10-29 18:50:47,905 - root - INFO - Training: Epoch 0030 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 484.3965 | Iter Mean Loss 776.2844
2020-10-29 18:50:47,911 - root - INFO - Training: Epoch 0030 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 288.9383 | Iter Mean Loss 613.8357
2020-10-29 18:50:47,918 - root - INFO - Training: Epoch 0030 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 297.0790 | Iter Mean Loss 534.6465
2020-10-29 18:50:47,920 - root - INFO - Evaluate: Epoch 0030 | NDCG 0.0061 | MSE 10.6079
2020-10-29 18:50:47,926 - root - INFO - Training: Epoch 0031 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1061.8320 | Iter Mean Loss 1061.8320
2020-10-29 18:50:47,934 - root - INFO - Training: Epoch 0031 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 477.9497 | Iter Mean Loss 769.8909
2020-10-29 18:50:47,941 - root - INFO - Training: Epoch 0031 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 285.4362 | Iter Mean Loss 608.4060
2020-10-29 18:50:47,946 - root - INFO - Training: Epoch 0031 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 292.5754 | Iter Mean Loss 529.4483
2020-10-29 18:50:47,948 - root - INFO - Evaluate: Epoch 0031 | NDCG 0.0061 | MSE 10.5943
2020-10-29 18:50:47,956 - root - INFO - Training: Epoch 0032 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1055.8726 | Iter Mean Loss 1055.8726
2020-10-29 18:50:47,963 - root - INFO - Training: Epoch 0032 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 471.9303 | Iter Mean Loss 763.9014
2020-10-29 18:50:47,970 - root - INFO - Training: Epoch 0032 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 282.2527 | Iter Mean Loss 603.3518
2020-10-29 18:50:47,975 - root - INFO - Training: Epoch 0032 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 288.4208 | Iter Mean Loss 524.6191
2020-10-29 18:50:47,977 - root - INFO - Evaluate: Epoch 0032 | NDCG 0.0061 | MSE 10.5791
2020-10-29 18:50:47,984 - root - INFO - Training: Epoch 0033 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1050.2717 | Iter Mean Loss 1050.2717
2020-10-29 18:50:47,991 - root - INFO - Training: Epoch 0033 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 466.3281 | Iter Mean Loss 758.2999
2020-10-29 18:50:47,997 - root - INFO - Training: Epoch 0033 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 279.3705 | Iter Mean Loss 598.6568
2020-10-29 18:50:48,002 - root - INFO - Training: Epoch 0033 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 284.6063 | Iter Mean Loss 520.1442
2020-10-29 18:50:48,004 - root - INFO - Evaluate: Epoch 0033 | NDCG 0.0061 | MSE 10.5625
2020-10-29 18:50:48,012 - root - INFO - Training: Epoch 0034 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1044.9977 | Iter Mean Loss 1044.9977
2020-10-29 18:50:48,018 - root - INFO - Training: Epoch 0034 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 461.1233 | Iter Mean Loss 753.0605
2020-10-29 18:50:48,024 - root - INFO - Training: Epoch 0034 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 276.7663 | Iter Mean Loss 594.2958
2020-10-29 18:50:48,030 - root - INFO - Training: Epoch 0034 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 281.1120 | Iter Mean Loss 515.9998
2020-10-29 18:50:48,031 - root - INFO - Evaluate: Epoch 0034 | NDCG 0.0061 | MSE 10.5444
2020-10-29 18:50:48,037 - root - INFO - Training: Epoch 0035 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1040.0095 | Iter Mean Loss 1040.0095
2020-10-29 18:50:48,044 - root - INFO - Training: Epoch 0035 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 456.2852 | Iter Mean Loss 748.1474
2020-10-29 18:50:48,050 - root - INFO - Training: Epoch 0035 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 274.4098 | Iter Mean Loss 590.2349
2020-10-29 18:50:48,055 - root - INFO - Training: Epoch 0035 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 277.9070 | Iter Mean Loss 512.1529
2020-10-29 18:50:48,057 - root - INFO - Evaluate: Epoch 0035 | NDCG 0.0061 | MSE 10.5252
2020-10-29 18:50:48,063 - root - INFO - Training: Epoch 0036 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1035.2588 | Iter Mean Loss 1035.2588
2020-10-29 18:50:48,069 - root - INFO - Training: Epoch 0036 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 451.7733 | Iter Mean Loss 743.5160
2020-10-29 18:50:48,075 - root - INFO - Training: Epoch 0036 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 272.2651 | Iter Mean Loss 586.4324
2020-10-29 18:50:48,080 - root - INFO - Training: Epoch 0036 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 274.9518 | Iter Mean Loss 508.5623
2020-10-29 18:50:48,082 - root - INFO - Evaluate: Epoch 0036 | NDCG 0.0662 | MSE 10.5050
2020-10-29 18:50:48,088 - root - INFO - Training: Epoch 0037 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1030.6915 | Iter Mean Loss 1030.6915
2020-10-29 18:50:48,094 - root - INFO - Training: Epoch 0037 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 447.5391 | Iter Mean Loss 739.1153
2020-10-29 18:50:48,100 - root - INFO - Training: Epoch 0037 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 270.2932 | Iter Mean Loss 582.8413
2020-10-29 18:50:48,106 - root - INFO - Training: Epoch 0037 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 272.2011 | Iter Mean Loss 505.1812
2020-10-29 18:50:48,107 - root - INFO - Evaluate: Epoch 0037 | NDCG 0.0662 | MSE 10.4838
2020-10-29 18:50:48,114 - root - INFO - Training: Epoch 0038 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1026.2517 | Iter Mean Loss 1026.2517
2020-10-29 18:50:48,121 - root - INFO - Training: Epoch 0038 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 443.5307 | Iter Mean Loss 734.8912
2020-10-29 18:50:48,127 - root - INFO - Training: Epoch 0038 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 268.4541 | Iter Mean Loss 579.4122
2020-10-29 18:50:48,133 - root - INFO - Training: Epoch 0038 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 269.6079 | Iter Mean Loss 501.9611
2020-10-29 18:50:48,136 - root - INFO - Evaluate: Epoch 0038 | NDCG 0.1365 | MSE 10.4620
2020-10-29 18:50:48,142 - root - INFO - Training: Epoch 0039 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1021.8861 | Iter Mean Loss 1021.8861
2020-10-29 18:50:48,148 - root - INFO - Training: Epoch 0039 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 439.6958 | Iter Mean Loss 730.7910
2020-10-29 18:50:48,155 - root - INFO - Training: Epoch 0039 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 266.7106 | Iter Mean Loss 576.0975
2020-10-29 18:50:48,161 - root - INFO - Training: Epoch 0039 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 267.1270 | Iter Mean Loss 498.8549
2020-10-29 18:50:48,163 - root - INFO - Evaluate: Epoch 0039 | NDCG 0.1365 | MSE 10.4395
2020-10-29 18:50:48,170 - root - INFO - Training: Epoch 0040 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1017.5463 | Iter Mean Loss 1017.5463
2020-10-29 18:50:48,176 - root - INFO - Training: Epoch 0040 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 435.9856 | Iter Mean Loss 726.7660
2020-10-29 18:50:48,183 - root - INFO - Training: Epoch 0040 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 265.0297 | Iter Mean Loss 572.8539
2020-10-29 18:50:48,189 - root - INFO - Training: Epoch 0040 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 264.7181 | Iter Mean Loss 495.8199
2020-10-29 18:50:48,190 - root - INFO - Evaluate: Epoch 0040 | NDCG 0.1455 | MSE 10.4166
2020-10-29 18:50:48,197 - root - INFO - Training: Epoch 0041 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1013.1923 | Iter Mean Loss 1013.1923
2020-10-29 18:50:48,203 - root - INFO - Training: Epoch 0041 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 432.3571 | Iter Mean Loss 722.7747
2020-10-29 18:50:48,210 - root - INFO - Training: Epoch 0041 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 263.3847 | Iter Mean Loss 569.6447
2020-10-29 18:50:48,215 - root - INFO - Training: Epoch 0041 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 262.3478 | Iter Mean Loss 492.8205
2020-10-29 18:50:48,217 - root - INFO - Evaluate: Epoch 0041 | NDCG 0.2610 | MSE 10.3934
2020-10-29 18:50:48,223 - root - INFO - Training: Epoch 0042 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1008.7920 | Iter Mean Loss 1008.7920
2020-10-29 18:50:48,230 - root - INFO - Training: Epoch 0042 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 428.7740 | Iter Mean Loss 718.7830
2020-10-29 18:50:48,236 - root - INFO - Training: Epoch 0042 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 261.7552 | Iter Mean Loss 566.4404
2020-10-29 18:50:48,241 - root - INFO - Training: Epoch 0042 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 259.9899 | Iter Mean Loss 489.8278
2020-10-29 18:50:48,243 - root - INFO - Evaluate: Epoch 0042 | NDCG 0.2854 | MSE 10.3699
2020-10-29 18:50:48,249 - root - INFO - Training: Epoch 0043 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 1004.3223 | Iter Mean Loss 1004.3223
2020-10-29 18:50:48,255 - root - INFO - Training: Epoch 0043 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 425.2081 | Iter Mean Loss 714.7652
2020-10-29 18:50:48,261 - root - INFO - Training: Epoch 0043 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 260.1270 | Iter Mean Loss 563.2191
2020-10-29 18:50:48,267 - root - INFO - Training: Epoch 0043 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 257.6251 | Iter Mean Loss 486.8206
2020-10-29 18:50:48,268 - root - INFO - Evaluate: Epoch 0043 | NDCG 0.3623 | MSE 10.3462
2020-10-29 18:50:48,275 - root - INFO - Training: Epoch 0044 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 999.7677 | Iter Mean Loss 999.7677
2020-10-29 18:50:48,281 - root - INFO - Training: Epoch 0044 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 421.6373 | Iter Mean Loss 710.7025
2020-10-29 18:50:48,287 - root - INFO - Training: Epoch 0044 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 258.4908 | Iter Mean Loss 559.9653
2020-10-29 18:50:48,292 - root - INFO - Training: Epoch 0044 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 255.2401 | Iter Mean Loss 483.7840
2020-10-29 18:50:48,294 - root - INFO - Evaluate: Epoch 0044 | NDCG 0.5486 | MSE 10.3223
2020-10-29 18:50:48,303 - root - INFO - Training: Epoch 0045 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 995.1171 | Iter Mean Loss 995.1171
2020-10-29 18:50:48,313 - root - INFO - Training: Epoch 0045 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 418.0451 | Iter Mean Loss 706.5811
2020-10-29 18:50:48,321 - root - INFO - Training: Epoch 0045 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 256.8411 | Iter Mean Loss 556.6678
2020-10-29 18:50:48,329 - root - INFO - Training: Epoch 0045 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 252.8260 | Iter Mean Loss 480.7073
2020-10-29 18:50:48,332 - root - INFO - Evaluate: Epoch 0045 | NDCG 0.5558 | MSE 10.2984
2020-10-29 18:50:48,339 - root - INFO - Training: Epoch 0046 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 990.3643 | Iter Mean Loss 990.3643
2020-10-29 18:50:48,348 - root - INFO - Training: Epoch 0046 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 414.4196 | Iter Mean Loss 702.3919
2020-10-29 18:50:48,357 - root - INFO - Training: Epoch 0046 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 255.1752 | Iter Mean Loss 553.3197
2020-10-29 18:50:48,365 - root - INFO - Training: Epoch 0046 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 250.3771 | Iter Mean Loss 477.5840
2020-10-29 18:50:48,367 - root - INFO - Evaluate: Epoch 0046 | NDCG 0.5832 | MSE 10.2743
2020-10-29 18:50:48,376 - root - INFO - Training: Epoch 0047 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 985.5047 | Iter Mean Loss 985.5047
2020-10-29 18:50:48,384 - root - INFO - Training: Epoch 0047 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 410.7520 | Iter Mean Loss 698.1284
2020-10-29 18:50:48,393 - root - INFO - Training: Epoch 0047 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 253.4916 | Iter Mean Loss 549.9161
2020-10-29 18:50:48,400 - root - INFO - Training: Epoch 0047 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 247.8897 | Iter Mean Loss 474.4095
2020-10-29 18:50:48,402 - root - INFO - Evaluate: Epoch 0047 | NDCG 0.5891 | MSE 10.2501
2020-10-29 18:50:48,410 - root - INFO - Training: Epoch 0048 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 980.5357 | Iter Mean Loss 980.5357
2020-10-29 18:50:48,418 - root - INFO - Training: Epoch 0048 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 407.0356 | Iter Mean Loss 693.7857
2020-10-29 18:50:48,427 - root - INFO - Training: Epoch 0048 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 251.7901 | Iter Mean Loss 546.4538
2020-10-29 18:50:48,435 - root - INFO - Training: Epoch 0048 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 245.3615 | Iter Mean Loss 471.1807
2020-10-29 18:50:48,438 - root - INFO - Evaluate: Epoch 0048 | NDCG 0.5891 | MSE 10.2258
2020-10-29 18:50:48,447 - root - INFO - Training: Epoch 0049 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 975.4549 | Iter Mean Loss 975.4549
2020-10-29 18:50:48,456 - root - INFO - Training: Epoch 0049 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 403.2657 | Iter Mean Loss 689.3603
2020-10-29 18:50:48,465 - root - INFO - Training: Epoch 0049 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 250.0707 | Iter Mean Loss 542.9304
2020-10-29 18:50:48,471 - root - INFO - Training: Epoch 0049 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 242.7907 | Iter Mean Loss 467.8955
2020-10-29 18:50:48,474 - root - INFO - Evaluate: Epoch 0049 | NDCG 0.5943 | MSE 10.2013
2020-10-29 18:50:48,481 - root - INFO - Training: Epoch 0050 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 970.2605 | Iter Mean Loss 970.2605
2020-10-29 18:50:48,488 - root - INFO - Training: Epoch 0050 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 399.4387 | Iter Mean Loss 684.8496
2020-10-29 18:50:48,494 - root - INFO - Training: Epoch 0050 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 248.3337 | Iter Mean Loss 539.3443
2020-10-29 18:50:48,499 - root - INFO - Training: Epoch 0050 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 240.1762 | Iter Mean Loss 464.5523
2020-10-29 18:50:48,501 - root - INFO - Evaluate: Epoch 0050 | NDCG 0.6389 | MSE 10.1766
2020-10-29 18:50:48,507 - root - INFO - Training: Epoch 0051 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 964.9512 | Iter Mean Loss 964.9512
2020-10-29 18:50:48,513 - root - INFO - Training: Epoch 0051 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 395.5525 | Iter Mean Loss 680.2518
2020-10-29 18:50:48,520 - root - INFO - Training: Epoch 0051 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 246.5795 | Iter Mean Loss 535.6944
2020-10-29 18:50:48,526 - root - INFO - Training: Epoch 0051 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 237.5172 | Iter Mean Loss 461.1501
2020-10-29 18:50:48,528 - root - INFO - Evaluate: Epoch 0051 | NDCG 0.6389 | MSE 10.1516
2020-10-29 18:50:48,535 - root - INFO - Training: Epoch 0052 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 959.5258 | Iter Mean Loss 959.5258
2020-10-29 18:50:48,542 - root - INFO - Training: Epoch 0052 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 391.6060 | Iter Mean Loss 675.5659
2020-10-29 18:50:48,549 - root - INFO - Training: Epoch 0052 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 244.8090 | Iter Mean Loss 531.9802
2020-10-29 18:50:48,554 - root - INFO - Training: Epoch 0052 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 234.8137 | Iter Mean Loss 457.6886
2020-10-29 18:50:48,556 - root - INFO - Evaluate: Epoch 0052 | NDCG 0.6461 | MSE 10.1263
2020-10-29 18:50:48,564 - root - INFO - Training: Epoch 0053 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 953.9835 | Iter Mean Loss 953.9835
2020-10-29 18:50:48,570 - root - INFO - Training: Epoch 0053 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 387.5992 | Iter Mean Loss 670.7914
2020-10-29 18:50:48,577 - root - INFO - Training: Epoch 0053 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 243.0230 | Iter Mean Loss 528.2019
2020-10-29 18:50:48,583 - root - INFO - Training: Epoch 0053 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 232.0657 | Iter Mean Loss 454.1679
2020-10-29 18:50:48,585 - root - INFO - Evaluate: Epoch 0053 | NDCG 0.6452 | MSE 10.1006
2020-10-29 18:50:48,592 - root - INFO - Training: Epoch 0054 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 948.3249 | Iter Mean Loss 948.3249
2020-10-29 18:50:48,599 - root - INFO - Training: Epoch 0054 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 383.5336 | Iter Mean Loss 665.9293
2020-10-29 18:50:48,605 - root - INFO - Training: Epoch 0054 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 241.2229 | Iter Mean Loss 524.3605
2020-10-29 18:50:48,611 - root - INFO - Training: Epoch 0054 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 229.2740 | Iter Mean Loss 450.5889
2020-10-29 18:50:48,612 - root - INFO - Evaluate: Epoch 0054 | NDCG 0.6452 | MSE 10.0745
2020-10-29 18:50:48,620 - root - INFO - Training: Epoch 0055 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 942.5505 | Iter Mean Loss 942.5505
2020-10-29 18:50:48,626 - root - INFO - Training: Epoch 0055 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 379.4114 | Iter Mean Loss 660.9810
2020-10-29 18:50:48,633 - root - INFO - Training: Epoch 0055 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 239.4105 | Iter Mean Loss 520.4575
2020-10-29 18:50:48,638 - root - INFO - Training: Epoch 0055 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 226.4398 | Iter Mean Loss 446.9530
2020-10-29 18:50:48,639 - root - INFO - Evaluate: Epoch 0055 | NDCG 0.6452 | MSE 10.0479
2020-10-29 18:50:48,646 - root - INFO - Training: Epoch 0056 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 936.6624 | Iter Mean Loss 936.6624
2020-10-29 18:50:48,652 - root - INFO - Training: Epoch 0056 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 375.2357 | Iter Mean Loss 655.9490
2020-10-29 18:50:48,658 - root - INFO - Training: Epoch 0056 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 237.5877 | Iter Mean Loss 516.4953
2020-10-29 18:50:48,663 - root - INFO - Training: Epoch 0056 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 223.5650 | Iter Mean Loss 443.2627
2020-10-29 18:50:48,665 - root - INFO - Evaluate: Epoch 0056 | NDCG 0.6452 | MSE 10.0206
2020-10-29 18:50:48,671 - root - INFO - Training: Epoch 0057 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 930.6631 | Iter Mean Loss 930.6631
2020-10-29 18:50:48,677 - root - INFO - Training: Epoch 0057 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 371.0107 | Iter Mean Loss 650.8369
2020-10-29 18:50:48,683 - root - INFO - Training: Epoch 0057 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 235.7573 | Iter Mean Loss 512.4771
2020-10-29 18:50:48,689 - root - INFO - Training: Epoch 0057 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 220.6516 | Iter Mean Loss 439.5207
2020-10-29 18:50:48,690 - root - INFO - Evaluate: Epoch 0057 | NDCG 0.6528 | MSE 9.9927
2020-10-29 18:50:48,696 - root - INFO - Training: Epoch 0058 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 924.5563 | Iter Mean Loss 924.5563
2020-10-29 18:50:48,703 - root - INFO - Training: Epoch 0058 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 366.7414 | Iter Mean Loss 645.6488
2020-10-29 18:50:48,709 - root - INFO - Training: Epoch 0058 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 233.9222 | Iter Mean Loss 508.4066
2020-10-29 18:50:48,714 - root - INFO - Training: Epoch 0058 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 217.7028 | Iter Mean Loss 435.7307
2020-10-29 18:50:48,716 - root - INFO - Evaluate: Epoch 0058 | NDCG 0.6753 | MSE 9.9641
2020-10-29 18:50:48,722 - root - INFO - Training: Epoch 0059 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 918.3467 | Iter Mean Loss 918.3467
2020-10-29 18:50:48,729 - root - INFO - Training: Epoch 0059 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 362.4333 | Iter Mean Loss 640.3900
2020-10-29 18:50:48,737 - root - INFO - Training: Epoch 0059 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 232.0858 | Iter Mean Loss 504.2886
2020-10-29 18:50:48,742 - root - INFO - Training: Epoch 0059 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 214.7217 | Iter Mean Loss 431.8969
2020-10-29 18:50:48,744 - root - INFO - Evaluate: Epoch 0059 | NDCG 0.6753 | MSE 9.9347
2020-10-29 18:50:48,751 - root - INFO - Training: Epoch 0060 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 912.0397 | Iter Mean Loss 912.0397
2020-10-29 18:50:48,758 - root - INFO - Training: Epoch 0060 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 358.0930 | Iter Mean Loss 635.0663
2020-10-29 18:50:48,764 - root - INFO - Training: Epoch 0060 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 230.2520 | Iter Mean Loss 500.1282
2020-10-29 18:50:48,771 - root - INFO - Training: Epoch 0060 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 211.7122 | Iter Mean Loss 428.0242
2020-10-29 18:50:48,773 - root - INFO - Evaluate: Epoch 0060 | NDCG 0.6753 | MSE 9.9045
2020-10-29 18:50:48,779 - root - INFO - Training: Epoch 0061 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 905.6418 | Iter Mean Loss 905.6418
2020-10-29 18:50:48,787 - root - INFO - Training: Epoch 0061 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 353.7273 | Iter Mean Loss 629.6845
2020-10-29 18:50:48,793 - root - INFO - Training: Epoch 0061 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 228.4247 | Iter Mean Loss 495.9313
2020-10-29 18:50:48,799 - root - INFO - Training: Epoch 0061 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 208.6788 | Iter Mean Loss 424.1182
2020-10-29 18:50:48,801 - root - INFO - Evaluate: Epoch 0061 | NDCG 0.6753 | MSE 9.8733
2020-10-29 18:50:48,808 - root - INFO - Training: Epoch 0062 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 899.1603 | Iter Mean Loss 899.1603
2020-10-29 18:50:48,814 - root - INFO - Training: Epoch 0062 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 349.3438 | Iter Mean Loss 624.2520
2020-10-29 18:50:48,821 - root - INFO - Training: Epoch 0062 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 226.6084 | Iter Mean Loss 491.7042
2020-10-29 18:50:48,827 - root - INFO - Training: Epoch 0062 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 205.6262 | Iter Mean Loss 420.1847
2020-10-29 18:50:48,828 - root - INFO - Evaluate: Epoch 0062 | NDCG 0.6753 | MSE 9.8412
2020-10-29 18:50:48,835 - root - INFO - Training: Epoch 0063 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 892.6034 | Iter Mean Loss 892.6034
2020-10-29 18:50:48,842 - root - INFO - Training: Epoch 0063 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 344.9504 | Iter Mean Loss 618.7769
2020-10-29 18:50:48,849 - root - INFO - Training: Epoch 0063 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 224.8075 | Iter Mean Loss 487.4538
2020-10-29 18:50:48,854 - root - INFO - Training: Epoch 0063 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 202.5595 | Iter Mean Loss 416.2302
2020-10-29 18:50:48,856 - root - INFO - Evaluate: Epoch 0063 | NDCG 0.6753 | MSE 9.8082
2020-10-29 18:50:48,862 - root - INFO - Training: Epoch 0064 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 885.9801 | Iter Mean Loss 885.9801
2020-10-29 18:50:48,868 - root - INFO - Training: Epoch 0064 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 340.5556 | Iter Mean Loss 613.2679
2020-10-29 18:50:48,874 - root - INFO - Training: Epoch 0064 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 223.0267 | Iter Mean Loss 483.1875
2020-10-29 18:50:48,879 - root - INFO - Training: Epoch 0064 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 199.4844 | Iter Mean Loss 412.2617
2020-10-29 18:50:48,881 - root - INFO - Evaluate: Epoch 0064 | NDCG 0.6814 | MSE 9.7740
2020-10-29 18:50:48,887 - root - INFO - Training: Epoch 0065 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 879.2997 | Iter Mean Loss 879.2997
2020-10-29 18:50:48,894 - root - INFO - Training: Epoch 0065 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 336.1682 | Iter Mean Loss 607.7340
2020-10-29 18:50:48,900 - root - INFO - Training: Epoch 0065 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 221.2705 | Iter Mean Loss 478.9128
2020-10-29 18:50:48,905 - root - INFO - Training: Epoch 0065 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 196.4068 | Iter Mean Loss 408.2863
2020-10-29 18:50:48,907 - root - INFO - Evaluate: Epoch 0065 | NDCG 0.6814 | MSE 9.7389
2020-10-29 18:50:48,913 - root - INFO - Training: Epoch 0066 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 872.5728 | Iter Mean Loss 872.5728
2020-10-29 18:50:48,919 - root - INFO - Training: Epoch 0066 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 331.7972 | Iter Mean Loss 602.1850
2020-10-29 18:50:48,925 - root - INFO - Training: Epoch 0066 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 219.5434 | Iter Mean Loss 474.6378
2020-10-29 18:50:48,931 - root - INFO - Training: Epoch 0066 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 193.3325 | Iter Mean Loss 404.3115
2020-10-29 18:50:48,932 - root - INFO - Evaluate: Epoch 0066 | NDCG 0.7049 | MSE 9.7026
2020-10-29 18:50:48,940 - root - INFO - Training: Epoch 0067 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 865.8096 | Iter Mean Loss 865.8096
2020-10-29 18:50:48,947 - root - INFO - Training: Epoch 0067 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 327.4518 | Iter Mean Loss 596.6307
2020-10-29 18:50:48,954 - root - INFO - Training: Epoch 0067 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 217.8498 | Iter Mean Loss 470.3704
2020-10-29 18:50:48,959 - root - INFO - Training: Epoch 0067 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 190.2679 | Iter Mean Loss 400.3448
2020-10-29 18:50:48,961 - root - INFO - Evaluate: Epoch 0067 | NDCG 0.7087 | MSE 9.6653
2020-10-29 18:50:48,967 - root - INFO - Training: Epoch 0068 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 859.0215 | Iter Mean Loss 859.0215
2020-10-29 18:50:48,975 - root - INFO - Training: Epoch 0068 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 323.1414 | Iter Mean Loss 591.0814
2020-10-29 18:50:48,981 - root - INFO - Training: Epoch 0068 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 216.1936 | Iter Mean Loss 466.1188
2020-10-29 18:50:48,987 - root - INFO - Training: Epoch 0068 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 187.2191 | Iter Mean Loss 396.3939
2020-10-29 18:50:48,989 - root - INFO - Evaluate: Epoch 0068 | NDCG 0.7954 | MSE 9.6269
2020-10-29 18:50:48,995 - root - INFO - Training: Epoch 0069 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 852.2197 | Iter Mean Loss 852.2197
2020-10-29 18:50:49,002 - root - INFO - Training: Epoch 0069 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 318.8751 | Iter Mean Loss 585.5474
2020-10-29 18:50:49,009 - root - INFO - Training: Epoch 0069 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 214.5786 | Iter Mean Loss 461.8911
2020-10-29 18:50:49,014 - root - INFO - Training: Epoch 0069 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 184.1924 | Iter Mean Loss 392.4664
2020-10-29 18:50:49,016 - root - INFO - Evaluate: Epoch 0069 | NDCG 0.8181 | MSE 9.5874
2020-10-29 18:50:49,022 - root - INFO - Training: Epoch 0070 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 845.4153 | Iter Mean Loss 845.4153
2020-10-29 18:50:49,029 - root - INFO - Training: Epoch 0070 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 314.6619 | Iter Mean Loss 580.0386
2020-10-29 18:50:49,035 - root - INFO - Training: Epoch 0070 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 213.0081 | Iter Mean Loss 457.6951
2020-10-29 18:50:49,041 - root - INFO - Training: Epoch 0070 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 181.1937 | Iter Mean Loss 388.5697
2020-10-29 18:50:49,042 - root - INFO - Evaluate: Epoch 0070 | NDCG 0.8059 | MSE 9.5469
2020-10-29 18:50:49,050 - root - INFO - Training: Epoch 0071 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 838.6199 | Iter Mean Loss 838.6199
2020-10-29 18:50:49,056 - root - INFO - Training: Epoch 0071 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 310.5109 | Iter Mean Loss 574.5654
2020-10-29 18:50:49,062 - root - INFO - Training: Epoch 0071 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 211.4847 | Iter Mean Loss 453.5385
2020-10-29 18:50:49,067 - root - INFO - Training: Epoch 0071 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 178.2289 | Iter Mean Loss 384.7111
2020-10-29 18:50:49,069 - root - INFO - Evaluate: Epoch 0071 | NDCG 0.8059 | MSE 9.5054
2020-10-29 18:50:49,075 - root - INFO - Training: Epoch 0072 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 831.8444 | Iter Mean Loss 831.8444
2020-10-29 18:50:49,081 - root - INFO - Training: Epoch 0072 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 306.4303 | Iter Mean Loss 569.1374
2020-10-29 18:50:49,087 - root - INFO - Training: Epoch 0072 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 210.0107 | Iter Mean Loss 449.4285
2020-10-29 18:50:49,093 - root - INFO - Training: Epoch 0072 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 175.3035 | Iter Mean Loss 380.8972
2020-10-29 18:50:49,094 - root - INFO - Evaluate: Epoch 0072 | NDCG 0.8080 | MSE 9.4629
2020-10-29 18:50:49,101 - root - INFO - Training: Epoch 0073 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 825.0997 | Iter Mean Loss 825.0997
2020-10-29 18:50:49,107 - root - INFO - Training: Epoch 0073 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 302.4281 | Iter Mean Loss 563.7639
2020-10-29 18:50:49,113 - root - INFO - Training: Epoch 0073 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 208.5877 | Iter Mean Loss 445.3718
2020-10-29 18:50:49,118 - root - INFO - Training: Epoch 0073 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 172.4226 | Iter Mean Loss 377.1345
2020-10-29 18:50:49,120 - root - INFO - Evaluate: Epoch 0073 | NDCG 0.8080 | MSE 9.4195
2020-10-29 18:50:49,126 - root - INFO - Training: Epoch 0074 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 818.3964 | Iter Mean Loss 818.3964
2020-10-29 18:50:49,132 - root - INFO - Training: Epoch 0074 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 298.5112 | Iter Mean Loss 558.4538
2020-10-29 18:50:49,140 - root - INFO - Training: Epoch 0074 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 207.2166 | Iter Mean Loss 441.3747
2020-10-29 18:50:49,146 - root - INFO - Training: Epoch 0074 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 169.5910 | Iter Mean Loss 373.4288
2020-10-29 18:50:49,147 - root - INFO - Evaluate: Epoch 0074 | NDCG 0.8080 | MSE 9.3752
2020-10-29 18:50:49,154 - root - INFO - Training: Epoch 0075 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 811.7439 | Iter Mean Loss 811.7439
2020-10-29 18:50:49,161 - root - INFO - Training: Epoch 0075 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 294.6863 | Iter Mean Loss 553.2151
2020-10-29 18:50:49,167 - root - INFO - Training: Epoch 0075 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 205.8977 | Iter Mean Loss 437.4426
2020-10-29 18:50:49,173 - root - INFO - Training: Epoch 0075 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 166.8129 | Iter Mean Loss 369.7852
2020-10-29 18:50:49,175 - root - INFO - Evaluate: Epoch 0075 | NDCG 0.8080 | MSE 9.3302
2020-10-29 18:50:49,182 - root - INFO - Training: Epoch 0076 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 805.1514 | Iter Mean Loss 805.1514
2020-10-29 18:50:49,189 - root - INFO - Training: Epoch 0076 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 290.9589 | Iter Mean Loss 548.0551
2020-10-29 18:50:49,196 - root - INFO - Training: Epoch 0076 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 204.6306 | Iter Mean Loss 433.5803
2020-10-29 18:50:49,202 - root - INFO - Training: Epoch 0076 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 164.0918 | Iter Mean Loss 366.2082
2020-10-29 18:50:49,204 - root - INFO - Evaluate: Epoch 0076 | NDCG 0.8080 | MSE 9.2844
2020-10-29 18:50:49,210 - root - INFO - Training: Epoch 0077 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 798.6274 | Iter Mean Loss 798.6274
2020-10-29 18:50:49,218 - root - INFO - Training: Epoch 0077 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 287.3336 | Iter Mean Loss 542.9805
2020-10-29 18:50:49,224 - root - INFO - Training: Epoch 0077 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 203.4142 | Iter Mean Loss 429.7917
2020-10-29 18:50:49,230 - root - INFO - Training: Epoch 0077 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 161.4310 | Iter Mean Loss 362.7015
2020-10-29 18:50:49,232 - root - INFO - Evaluate: Epoch 0077 | NDCG 0.8469 | MSE 9.2380
2020-10-29 18:50:49,239 - root - INFO - Training: Epoch 0078 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 792.1790 | Iter Mean Loss 792.1790
2020-10-29 18:50:49,245 - root - INFO - Training: Epoch 0078 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 283.8138 | Iter Mean Loss 537.9964
2020-10-29 18:50:49,251 - root - INFO - Training: Epoch 0078 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 202.2467 | Iter Mean Loss 426.0798
2020-10-29 18:50:49,257 - root - INFO - Training: Epoch 0078 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 158.8329 | Iter Mean Loss 359.2681
2020-10-29 18:50:49,258 - root - INFO - Evaluate: Epoch 0078 | NDCG 0.8591 | MSE 9.1910
2020-10-29 18:50:49,264 - root - INFO - Training: Epoch 0079 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 785.8124 | Iter Mean Loss 785.8124
2020-10-29 18:50:49,271 - root - INFO - Training: Epoch 0079 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 280.4024 | Iter Mean Loss 533.1074
2020-10-29 18:50:49,277 - root - INFO - Training: Epoch 0079 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 201.1259 | Iter Mean Loss 422.4469
2020-10-29 18:50:49,282 - root - INFO - Training: Epoch 0079 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 156.2996 | Iter Mean Loss 355.9101
2020-10-29 18:50:49,283 - root - INFO - Evaluate: Epoch 0079 | NDCG 0.8591 | MSE 9.1436
2020-10-29 18:50:49,290 - root - INFO - Training: Epoch 0080 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 779.5337 | Iter Mean Loss 779.5337
2020-10-29 18:50:49,296 - root - INFO - Training: Epoch 0080 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 277.1008 | Iter Mean Loss 528.3172
2020-10-29 18:50:49,302 - root - INFO - Training: Epoch 0080 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 200.0486 | Iter Mean Loss 418.8944
2020-10-29 18:50:49,308 - root - INFO - Training: Epoch 0080 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 153.8326 | Iter Mean Loss 352.6289
2020-10-29 18:50:49,310 - root - INFO - Evaluate: Epoch 0080 | NDCG 0.8640 | MSE 9.0958
2020-10-29 18:50:49,316 - root - INFO - Training: Epoch 0081 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 773.3467 | Iter Mean Loss 773.3467
2020-10-29 18:50:49,322 - root - INFO - Training: Epoch 0081 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 273.9095 | Iter Mean Loss 523.6281
2020-10-29 18:50:49,329 - root - INFO - Training: Epoch 0081 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 199.0116 | Iter Mean Loss 415.4226
2020-10-29 18:50:49,335 - root - INFO - Training: Epoch 0081 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 151.4326 | Iter Mean Loss 349.4251
2020-10-29 18:50:49,336 - root - INFO - Evaluate: Epoch 0081 | NDCG 0.8640 | MSE 9.0477
2020-10-29 18:50:49,344 - root - INFO - Training: Epoch 0082 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 767.2556 | Iter Mean Loss 767.2556
2020-10-29 18:50:49,351 - root - INFO - Training: Epoch 0082 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 270.8284 | Iter Mean Loss 519.0420
2020-10-29 18:50:49,358 - root - INFO - Training: Epoch 0082 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 198.0109 | Iter Mean Loss 412.0317
2020-10-29 18:50:49,364 - root - INFO - Training: Epoch 0082 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 149.1001 | Iter Mean Loss 346.2988
2020-10-29 18:50:49,366 - root - INFO - Evaluate: Epoch 0082 | NDCG 0.8640 | MSE 8.9995
2020-10-29 18:50:49,373 - root - INFO - Training: Epoch 0083 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 761.2628 | Iter Mean Loss 761.2628
2020-10-29 18:50:49,380 - root - INFO - Training: Epoch 0083 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 267.8563 | Iter Mean Loss 514.5595
2020-10-29 18:50:49,387 - root - INFO - Training: Epoch 0083 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 197.0425 | Iter Mean Loss 408.7205
2020-10-29 18:50:49,393 - root - INFO - Training: Epoch 0083 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 146.8353 | Iter Mean Loss 343.2492
2020-10-29 18:50:49,395 - root - INFO - Evaluate: Epoch 0083 | NDCG 0.8640 | MSE 8.9511
2020-10-29 18:50:49,402 - root - INFO - Training: Epoch 0084 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 755.3699 | Iter Mean Loss 755.3699
2020-10-29 18:50:49,409 - root - INFO - Training: Epoch 0084 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 264.9912 | Iter Mean Loss 510.1805
2020-10-29 18:50:49,415 - root - INFO - Training: Epoch 0084 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 196.1021 | Iter Mean Loss 405.4877
2020-10-29 18:50:49,421 - root - INFO - Training: Epoch 0084 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 144.6376 | Iter Mean Loss 340.2752
2020-10-29 18:50:49,423 - root - INFO - Evaluate: Epoch 0084 | NDCG 0.8640 | MSE 8.9027
2020-10-29 18:50:49,430 - root - INFO - Training: Epoch 0085 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 749.5781 | Iter Mean Loss 749.5781
2020-10-29 18:50:49,437 - root - INFO - Training: Epoch 0085 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 262.2307 | Iter Mean Loss 505.9044
2020-10-29 18:50:49,443 - root - INFO - Training: Epoch 0085 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 195.1855 | Iter Mean Loss 402.3314
2020-10-29 18:50:49,448 - root - INFO - Training: Epoch 0085 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 142.5066 | Iter Mean Loss 337.3752
2020-10-29 18:50:49,450 - root - INFO - Evaluate: Epoch 0085 | NDCG 0.8640 | MSE 8.8544
2020-10-29 18:50:49,456 - root - INFO - Training: Epoch 0086 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 743.8876 | Iter Mean Loss 743.8876
2020-10-29 18:50:49,462 - root - INFO - Training: Epoch 0086 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 259.5717 | Iter Mean Loss 501.7296
2020-10-29 18:50:49,468 - root - INFO - Training: Epoch 0086 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 194.2883 | Iter Mean Loss 399.2492
2020-10-29 18:50:49,474 - root - INFO - Training: Epoch 0086 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 140.4413 | Iter Mean Loss 334.5472
2020-10-29 18:50:49,475 - root - INFO - Evaluate: Epoch 0086 | NDCG 0.8724 | MSE 8.8062
2020-10-29 18:50:49,481 - root - INFO - Training: Epoch 0087 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 738.2986 | Iter Mean Loss 738.2986
2020-10-29 18:50:49,487 - root - INFO - Training: Epoch 0087 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 257.0110 | Iter Mean Loss 497.6548
2020-10-29 18:50:49,493 - root - INFO - Training: Epoch 0087 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 193.4067 | Iter Mean Loss 396.2388
2020-10-29 18:50:49,499 - root - INFO - Training: Epoch 0087 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 138.4408 | Iter Mean Loss 331.7893
2020-10-29 18:50:49,500 - root - INFO - Evaluate: Epoch 0087 | NDCG 0.8724 | MSE 8.7583
2020-10-29 18:50:49,506 - root - INFO - Training: Epoch 0088 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 732.8105 | Iter Mean Loss 732.8105
2020-10-29 18:50:49,513 - root - INFO - Training: Epoch 0088 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 254.5449 | Iter Mean Loss 493.6777
2020-10-29 18:50:49,519 - root - INFO - Training: Epoch 0088 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 192.5369 | Iter Mean Loss 393.2974
2020-10-29 18:50:49,524 - root - INFO - Training: Epoch 0088 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 136.5036 | Iter Mean Loss 329.0990
2020-10-29 18:50:49,525 - root - INFO - Evaluate: Epoch 0088 | NDCG 0.8724 | MSE 8.7106
2020-10-29 18:50:49,532 - root - INFO - Training: Epoch 0089 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 727.4218 | Iter Mean Loss 727.4218
2020-10-29 18:50:49,539 - root - INFO - Training: Epoch 0089 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 252.1696 | Iter Mean Loss 489.7957
2020-10-29 18:50:49,546 - root - INFO - Training: Epoch 0089 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 191.6757 | Iter Mean Loss 390.4224
2020-10-29 18:50:49,552 - root - INFO - Training: Epoch 0089 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 134.6284 | Iter Mean Loss 326.4739
2020-10-29 18:50:49,554 - root - INFO - Evaluate: Epoch 0089 | NDCG 0.8724 | MSE 8.6633
2020-10-29 18:50:49,562 - root - INFO - Training: Epoch 0090 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 722.1313 | Iter Mean Loss 722.1313
2020-10-29 18:50:49,569 - root - INFO - Training: Epoch 0090 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 249.8813 | Iter Mean Loss 486.0063
2020-10-29 18:50:49,575 - root - INFO - Training: Epoch 0090 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 190.8203 | Iter Mean Loss 387.6110
2020-10-29 18:50:49,582 - root - INFO - Training: Epoch 0090 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 132.8140 | Iter Mean Loss 323.9117
2020-10-29 18:50:49,584 - root - INFO - Evaluate: Epoch 0090 | NDCG 0.8724 | MSE 8.6164
2020-10-29 18:50:49,590 - root - INFO - Training: Epoch 0091 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 716.9375 | Iter Mean Loss 716.9375
2020-10-29 18:50:49,598 - root - INFO - Training: Epoch 0091 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 247.6762 | Iter Mean Loss 482.3068
2020-10-29 18:50:49,604 - root - INFO - Training: Epoch 0091 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 189.9680 | Iter Mean Loss 384.8606
2020-10-29 18:50:49,610 - root - INFO - Training: Epoch 0091 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 131.0586 | Iter Mean Loss 321.4101
2020-10-29 18:50:49,613 - root - INFO - Evaluate: Epoch 0091 | NDCG 0.8724 | MSE 8.5700
2020-10-29 18:50:49,619 - root - INFO - Training: Epoch 0092 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 711.8384 | Iter Mean Loss 711.8384
2020-10-29 18:50:49,626 - root - INFO - Training: Epoch 0092 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 245.5503 | Iter Mean Loss 478.6944
2020-10-29 18:50:49,633 - root - INFO - Training: Epoch 0092 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 189.1171 | Iter Mean Loss 382.1686
2020-10-29 18:50:49,638 - root - INFO - Training: Epoch 0092 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 129.3607 | Iter Mean Loss 318.9666
2020-10-29 18:50:49,640 - root - INFO - Evaluate: Epoch 0092 | NDCG 0.8724 | MSE 8.5241
2020-10-29 18:50:49,646 - root - INFO - Training: Epoch 0093 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 706.8318 | Iter Mean Loss 706.8318
2020-10-29 18:50:49,652 - root - INFO - Training: Epoch 0093 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 243.4999 | Iter Mean Loss 475.1659
2020-10-29 18:50:49,659 - root - INFO - Training: Epoch 0093 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 188.2661 | Iter Mean Loss 379.5326
2020-10-29 18:50:49,664 - root - INFO - Training: Epoch 0093 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 127.7185 | Iter Mean Loss 316.5791
2020-10-29 18:50:49,665 - root - INFO - Evaluate: Epoch 0093 | NDCG 0.8734 | MSE 8.4788
2020-10-29 18:50:49,672 - root - INFO - Training: Epoch 0094 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 701.9158 | Iter Mean Loss 701.9158
2020-10-29 18:50:49,678 - root - INFO - Training: Epoch 0094 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 241.5213 | Iter Mean Loss 471.7185
2020-10-29 18:50:49,684 - root - INFO - Training: Epoch 0094 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 187.4139 | Iter Mean Loss 376.9503
2020-10-29 18:50:49,689 - root - INFO - Training: Epoch 0094 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 126.1304 | Iter Mean Loss 314.2453
2020-10-29 18:50:49,691 - root - INFO - Evaluate: Epoch 0094 | NDCG 0.8734 | MSE 8.4340
2020-10-29 18:50:49,697 - root - INFO - Training: Epoch 0095 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 697.0877 | Iter Mean Loss 697.0877
2020-10-29 18:50:49,703 - root - INFO - Training: Epoch 0095 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 239.6109 | Iter Mean Loss 468.3493
2020-10-29 18:50:49,709 - root - INFO - Training: Epoch 0095 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 186.5599 | Iter Mean Loss 374.4195
2020-10-29 18:50:49,715 - root - INFO - Training: Epoch 0095 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 124.5944 | Iter Mean Loss 311.9632
2020-10-29 18:50:49,716 - root - INFO - Evaluate: Epoch 0095 | NDCG 0.8734 | MSE 8.3898
2020-10-29 18:50:49,723 - root - INFO - Training: Epoch 0096 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 692.3455 | Iter Mean Loss 692.3455
2020-10-29 18:50:49,729 - root - INFO - Training: Epoch 0096 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 237.7653 | Iter Mean Loss 465.0554
2020-10-29 18:50:49,736 - root - INFO - Training: Epoch 0096 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 185.7036 | Iter Mean Loss 371.9382
2020-10-29 18:50:49,741 - root - INFO - Training: Epoch 0096 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 123.1088 | Iter Mean Loss 309.7308
2020-10-29 18:50:49,743 - root - INFO - Evaluate: Epoch 0096 | NDCG 0.8734 | MSE 8.3463
2020-10-29 18:50:49,751 - root - INFO - Training: Epoch 0097 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 687.6867 | Iter Mean Loss 687.6867
2020-10-29 18:50:49,758 - root - INFO - Training: Epoch 0097 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 235.9813 | Iter Mean Loss 461.8340
2020-10-29 18:50:49,765 - root - INFO - Training: Epoch 0097 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 184.8453 | Iter Mean Loss 369.5044
2020-10-29 18:50:49,770 - root - INFO - Training: Epoch 0097 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 121.6717 | Iter Mean Loss 307.5462
2020-10-29 18:50:49,772 - root - INFO - Evaluate: Epoch 0097 | NDCG 0.8734 | MSE 8.3034
2020-10-29 18:50:49,780 - root - INFO - Training: Epoch 0098 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 683.1090 | Iter Mean Loss 683.1090
2020-10-29 18:50:49,786 - root - INFO - Training: Epoch 0098 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 234.2556 | Iter Mean Loss 458.6823
2020-10-29 18:50:49,794 - root - INFO - Training: Epoch 0098 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 183.9849 | Iter Mean Loss 367.1165
2020-10-29 18:50:49,800 - root - INFO - Training: Epoch 0098 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 120.2811 | Iter Mean Loss 305.4077
2020-10-29 18:50:49,802 - root - INFO - Evaluate: Epoch 0098 | NDCG 0.8734 | MSE 8.2612
2020-10-29 18:50:49,809 - root - INFO - Training: Epoch 0099 / 0100 | Iter 0000 / 0003 | Time 0.0s | Iter Loss 678.6100 | Iter Mean Loss 678.6100
2020-10-29 18:50:49,816 - root - INFO - Training: Epoch 0099 / 0100 | Iter 0001 / 0003 | Time 0.0s | Iter Loss 232.5855 | Iter Mean Loss 455.5978
2020-10-29 18:50:49,822 - root - INFO - Training: Epoch 0099 / 0100 | Iter 0002 / 0003 | Time 0.0s | Iter Loss 183.1231 | Iter Mean Loss 364.7729
2020-10-29 18:50:49,828 - root - INFO - Training: Epoch 0099 / 0100 | Iter 0003 / 0003 | Time 0.0s | Iter Loss 118.9353 | Iter Mean Loss 303.3135
2020-10-29 18:50:49,830 - root - INFO - Evaluate: Epoch 0099 | NDCG 0.8734 | MSE 8.2196
2020-10-29 18:50:49,830 - root - INFO - [!]-----------training done.
2020-10-29 18:50:49,860 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-29 18:50:49,860 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,860 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,861 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,862 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols2' (NotoSansSymbols2-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,863 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac Eastern' (NotoSansSyriacEastern-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,864 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,865 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,866 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac Estrangela' (NotoSansSyriacEstrangela-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Music' (NotoMusic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,867 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.otf) normal normal 300 normal>) = 10.145
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,868 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,869 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'WenQuanYi Micro Hei' (wqy-microhei.ttc) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2020-10-29 18:50:49,870 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliqUrdu-Bold.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'webdings' (DeepinOpenSymbol4.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,871 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,872 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,873 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,874 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac Western' (NotoSansSyriacWestern-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Grantha' (NotoSansGrantha-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (DeepinOpenSymbol2.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,875 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal 300 normal>) = 10.145
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,876 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.otf) oblique normal 300 normal>) = 11.145
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,877 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Unifont CSUR' (unifont_csur.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,878 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,879 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Unifont' (unifont.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (DeepinOpenSymbol3.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,880 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,881 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliqUrdu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,882 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,883 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Anatolian Hieroglyphs' (NotoSansAnatolianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,884 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (DeepinOpenSymbol6.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,885 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Math' (NotoSansMath-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,886 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,887 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (DeepinOpenSymbol.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MT Extra' (DeepinOpenSymbol5.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Unifont Upper' (unifont_upper.ttf) normal normal 500 normal>) = 10.145
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.otf) oblique normal 700 normal>) = 11.335
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-29 18:50:49,889 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/penguincat/.conda/envs/PY38/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-29 18:50:49,995 - root - INFO - [!]-----------start testing.
2020-10-29 18:50:49,997 - root - INFO - Test Result: NDCG 0.8734 | MSE 8.2196
